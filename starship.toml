# ~/.config/starship.toml
# "$schema" = 'https://starship.rs/config-schema.json'

add_newline = true
command_timeout = 10_000

# Change the default prompt format
format = """\
$env_var$battery$directory$all\
$time$character"""

[time]
disabled = false
# format = '[\[$time\]]($style) '
format = '[ $time ]($style) '
# time_format = "%-I:%M:%S%p"
time_format = "%T"
style = "fg:0 bg:191"

# Battery
[battery]
full_symbol = "Ôï∏"
charging_symbol = "‚á°ÔñÉ"
discharging_symbol = "‚á£ÔñÇ"
format = "[ $symbol $percentage ]($style) "

[[battery.display]]
threshold = 30
style = "fg:0 bg:196"

[[battery.display]]
threshold = 50
style = "fg:0 bg:208"

[[battery.display]]
threshold = 70
style = "fg:0 bg:220"

[[battery.display]]
threshold = 85
style = "fg:0 bg:226"

[[battery.display]]
threshold = 90
style = "fg:0 bg:190"

[[battery.display]]
threshold = 95
style = "fg:0 bg:154"

[[battery.display]]
threshold = 99
style = "fg:0 bg:10"

# Change the default prompt characters
[character]
success_symbol = "[‚ùØ](fg:191)"
error_symbol = "[ÔÄç](fg:9)"

# Shows an icon that should be included by zshrc script based on the distribution or os
[env_var.STARSHIP_DISTRO]
format = "[$env_value](white) "
variable = "STARSHIP_DISTRO"
disabled = false

[username]
style_user = "fg:white bg:black"
style_root = "fg:black bg:white"
format = "[$user]($style)@"
disabled = false
show_always = false

[cmd_duration]
min_time = 2_000
format = '[ Ô®û $duration ](fg:0 bg:255) '

[directory]
truncation_length = 10
truncate_to_repo = true
style = "fg:0 bg:191"
home_symbol = "~"
read_only_style = "197"
read_only = " ÔÄ£ "
use_os_path_sep	= false
format = "[[$read_only]($read_only_style) Óóæ $path ]($style) "


[directory.substitutions]
"odg-digital-services/infrastructure/pulumi/" = ""
"odg-digital-services/apps/customer/functions/" = ""
"odg-digital-services/apps/platforms/functions/" = ""
"odg-digital-services/dist/apps/customer/functions/" = "dist -> "
"odg-digital-services/dist/apps/platforms/functions/" = "dist -> "
# "odg-digital-services/apps/dashboard/" = "apps/dashboard/"
"odg-digital-services/apps/widgets/" = "page-pilets/"
# "odg-digital-services/libs/" = "lib-"

"odg-digital-services/libs/component-auth" = "component-auth"
"odg-digital-services/apps/customer/functions/customer-profile-api" = "customer-profile-api"
"odg-digital-services/apps/customer/widgets/customer-profile-ui" = "customer-profile-ui"
"odg-digital-services/apps/dashboard" = "dashboard"
"odg-digital-services/libs/design-system" = "design-system"
"odg-digital-services/infrastructure/pulumi/core-appgw" = "iac-core-appgw"
"odg-digital-services/infrastructure/pulumi/core-infrastructure" = "iac-core-infrastructure"
"odg-digital-services/infrastructure/pulumi/enterprise-services" = "iac-enterprise-services"
"odg-digital-services/infrastructure/pulumi/services-portal" = "iac-services-portal"
"odg-digital-services/libs/api/auth" = "libs/api-auth"
"odg-digital-services/libs/api/error-handling" = "libs/api-error-handling"
"odg-digital-services/libs/api/helpers" = "libs/api-helpers"
"odg-digital-services/libs/api/logging" = "libs/api-logging"
"odg-digital-services/libs/api/service-bus" = "libs/api-service-bus"
"odg-digital-services/libs/api/shared-dtos" = "libs/api-shared-dtos"
"odg-digital-services/libs/api/test" = "libs/api-test"
"odg-digital-services/libs/iac/core" = "libs/iac-core"
"odg-digital-services/libs/iac/apps" = "libs/iac-apps"
"odg-digital-services/libs/shared/auth" = "libs/shared-auth"
"odg-digital-services/libs/shared/customer-profile-api" = "libs/shared-customer-profile-api"
"odg-digital-services/libs/shared/licence-api" = "libs/shared-licence-api"
"odg-digital-services/libs/shared/transaction-manager-api" = "libs/shared-transaction-manager-api"
"odg-digital-services/apps/customer/functions/licence-api" = "licence-api"
"odg-digital-services/apps/platforms/functions/lodgement-api" = "lodgement-api"
"odg-digital-services/libs/nx-plugin" = "nx-plugin"
"odg-digital-services/apps/platforms/functions/transaction-manager-api" = "transaction-manager-api"
"odg-digital-services/apps/widgets/customer-profile/transactions-status" = "widgets-customer-transactions"
"odg-digital-services/apps/widgets/design-system" = "widgets-design-system"
"odg-digital-services/apps/widgets/layout" = "widgets-layout"
"odg-digital-services/apps/widgets/customer-profile/licences" = "widgets-licences"
"odg-digital-services/apps/widgets/customer-profile/personal-information" = "widgets-personal-information"
"odg-digital-services/apps/widgets/token-info" = "widgets-token-info"
"odg-digital-services/apps/widgets/welcome" = "widgets-welcome"




# "/" = " ÔÅî "
# "/" = " ÔÅî "
# "\\" = "ÔÅî"
# style = "fg:0 bg:191"

[git_branch]
symbol = "ÓÇ† "
format = "[ $symbol$branch ]($style)"
style = "fg:0 bg:215"
truncation_length = 32

# [git_branch.substitutions]
# "bugfix/" = "ÔÜà "
# "feature/" = "ÓâÅ "

[git_status]
format     = '[\[ $all_status$ahead_behind\] ](fg:0 bg:215) '
up_to_date = "[ÔÄå ](fg:0 bg:215)"
diverged   = "[‚áï diverged ‚á°${ahead_count} ‚á£${behind_count} ](fg:0 bg:215)"
ahead      = "[‚á°${count} ](fg:0 bg:215)"
behind     = "[‚á£${count} ](fg:0 bg:215)"
conflicted = "[!${count} ](fg:0 bg:215)"
untracked  = "[?${count} ](fg:0 bg:215)"
# stashed    = "[#${count} ](fg:0 bg:215)"
stashed    = ""
modified   = "[~${count} ](fg:0 bg:215)"
staged     = "[+${count} ](fg:0 bg:215)"
renamed    = "[Ôïì${count} ](fg:0 bg:215)"
deleted    = "[ÔÄî${count} ](fg:0 bg:215)"


# [gcloud]
# format = " on [$symbol$account(@$domain)(\($region\))]($style) "
# symbol = "‚òÅÔ∏è"

[azure]
format = "[ $symbol($subscription) ]($style) "
style = "fg:0 bg:39"
symbol = "Ô¥É "
disabled = false

[pulumi]
format = "[ $symbol$stack ]($style) "
symbol = "ÔÇÖ "
style = "fg:0 bg:135"

[dotnet]
format = "[ $symbol$versionüéØ $tfm ]($style) "
symbol = ".NET "
style = "fg:0 bg:57"
heuristic = true
detect_files = ["global.json", "Directory.Build.props", "Directory.Build.targets", "Packages.props"]

[docker_context]
format = "[ Ôåà $context](13) "

[package]
format = "[ $symbol$version ]($style) "
style = "fg:0 bg:45"
symbol = "Ô£ñ "
version_format = "v${raw}"
display_private = true

[python]
format = "[ $symbol$version ]($style) "
symbol = "Ô†ü "
style = "fg:220 bg:27"
python_binary = "python3"

[nodejs]
format = "[ $symbol$version ](fg:0 bg:155) "
symbol = "Ôêó "
disabled = true

[ruby]
format = " [ Óàæ $version](fg:0 bg:124) "
